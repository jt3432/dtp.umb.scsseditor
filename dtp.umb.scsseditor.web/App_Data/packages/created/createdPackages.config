<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="1" version=".02" url="https://our.umbraco.org/projects/backoffice-extensions/backoffice-scss-editor" name="Backoffice Scss Editor" folder="5e9fe011-be71-4fea-be20-29a6070f70c9" packagepath="~/media/created-packages/Backoffice_Scss_Editor_.02.zip" repositoryGuid="" packageGuid="1b693ee4-4ce5-4bc7-92c1-82f11db1cae8" hasUpdate="False" enableSkins="False" skinRepoGuid="00000000-0000-0000-0000-000000000000">
    <license url="http://opensource.org/licenses/MIT">MIT License</license>
    <author url="http://www.ducttapeprogramming.com">Jason Thomas</author>
    <readme><![CDATA[Umbraco 7 Backoffice SCSS Editor

ver  .01
    - Beta Release

Ver .02
     - Add functionality to advance the ClientDependency version number when SCSS file is saved.

Once you go SCSS (http://sass-lang.com/) it is had to go back! This simple back office extension adds a SCSS file editor and ClientDependency compiler to our favorite CMS.

To install:
Download package and install via the Umbraco back office, then add the below httpHandler reference into your web.config under the node:

<add path="*.scss" verb="GET" type="dtp.umb.scsseditor.cd.SassHandler, dtp.umb.scsseditor.cd" />

Also add this handler under the node:

<remove name="DtpScssHandler" />
<add name="DtpScssHandler" path="*.scss" verb="GET" type="dtp.umb.scsseditor.cd.ScssHandler, dtp.umb.scsseditor.cd" resourceType="File" preCondition="" />

Web.Config settings:
The extension will add three appSettings key to the web.config:

<add key="dtpScssEditor:Version" value="0.01" />  
<add key="dtpScssEditor:Root" value="~/scss/" />  
<add key="dtpScssEditor:DeleteEmptyDirectory" value="true" />

-dtpScssEditor:Version, is the extension version. Just for reference, recommend not to change.

-dtpScssEditor:Root, is the configurable location of your scss files. Default is ~/scss/ and the directory will be created automatically.

-dtpScssEditor:DeleteEmptyDirectory, when true prevents the deletion of directories that are not empty. Just a safeguard to protect you from deleting all your hard work.

Using your SCSS files:
The point of this is to have some runtime compiled SCSS to CSS. To use your SCSS file in your site/templates include the Client Dependency MVC handler in your view, then add you SCSS file with the Client Dependency RequiresCss helper.

@using ClientDependency.Core.Mvc;
@{
    Html.RequiresCss("~/scss/main.scss");  
}

Don't forget to add the output helper where you want the compiled SCSS to render.

@Html.RenderCssHere();  


Note: See Client Dependency (CD) GitHub for CD documentation: https://github.com/Shazwazza/ClientDependency
]]></readme>
    <actions>
    </actions>
    <datatypes>
    </datatypes>
    <content nodeId="" loadChildNodes="False">
    </content>
    <templates>
    </templates>
    <stylesheets>
    </stylesheets>
    <documenttypes>
    </documenttypes>
    <macros>
    </macros>
    <files>
      <file>/bin/dtp.umb.scsseditor.cd.dll</file>
      <file>/bin/NSass.Core.dll</file>
      <file>/App_Plugins/DtpScssEditor</file>
      <file>/bin/NSass.Wrapper</file>
      <file>/bin/dtp.umb.scsseditor.lib.dll</file>
    </files>
    <languages>
    </languages>
    <dictionaryitems>
    </dictionaryitems>
    <loadcontrol>
    </loadcontrol>
  </package>
</packages>